#!groovy
@Library('Infrastructure@feature/RPE-884-multiple-vaults-in-pipeline') _

import uk.gov.hmcts.contino.PipelineCallbacks

def type = "java"
def product = "bulk-scan"
def component = "orchestrator"

def channel = '#bsp-build-notices'

def secrets = [
  'bulk-scan-${env}': [
    secret('idam-users-bulkscan-username', 'IDAM_USER_NAME'),
    secret('idam-users-bulkscan-password', 'IDAM_USER_PASSWORD'),
    secret('idam-client-secret', 'IDAM_CLIENT_SECRET')
  ],
  's2s-${env}'      : [
    secret('microservicekey-bulk-scan-orchestrator', 'S2S_SECRET'),
    secret('microservicekey-ccd-data', 'DATA_STORE_S2S_KEY'),
    secret('microservicekey-ccd-definition', 'DEFINITION_STORE_S2S_KEY'),
    secret('microservicekey-ccd-gw', 'API_GATEWAY_S2S_KEY'),
  ],
  'ccd-${env}'      : [
    secret('ccd-api-gateway-oauth2-client-secret', 'API_GATEWAY_IDAM_SECRET')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

node {
  stage('Secrets') {
    withSubscription('nonprod') {
      def pl = new PipelineCallbacks(null, this)
      pl.loadVaultSecrets(secrets)
      withTeamSecrets(pl, 'aat') {
        sh "env"
      }

    }
  }
}
